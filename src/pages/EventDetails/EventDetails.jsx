import { useState, useEffect } from 'react'
import { useParams, useNavigate } from 'react-router-dom'
import Loading from '../../components/Loading/Loading'
import './EventDetails.css'

const EventDetails = () => {
  const { id } = useParams()
  const navigate = useNavigate()
  const [event, setEvent] = useState(null)
  const [loading, setLoading] = useState(true)
  const [ticketCount, setTicketCount] = useState(1)

  useEffect(() => {
    const fetchEventDetails = async () => {
      setLoading(true)
      try {
        // –ò–º–∏—Ç–∞—Ü–∏—è –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö —Å API
        const mockEvents = {
          1: {
            id: 1,
            title: 'Rock Concert 2024',
            date: '15 –º–∞—Ä—Ç–∞ 2024, 19:00',
            location: '–ú–æ—Å–∫–≤–∞, –°—Ç–∞–¥–∏–æ–Ω –õ—É–∂–Ω–∏–∫–∏',
            address: '—É–ª. –õ—É–∂–Ω–∏–∫–∏, 24, —Å—Ç—Ä. 1',
            price: 2500,
            type: 'concert',
            image: 'https://via.placeholder.com/600x400/3498db/ffffff?text=Rock+Concert',
            description: '–ì—Ä–∞–Ω–¥–∏–æ–∑–Ω—ã–π —Ä–æ–∫-–∫–æ–Ω—Ü–µ—Ä—Ç —Å —É—á–∞—Å—Ç–∏–µ–º –ª—É—á—à–∏—Ö –≥—Ä—É–ø–ø —Å—Ç—Ä–∞–Ω—ã. –ù–µ–∑–∞–±—ã–≤–∞–µ–º–∞—è –∞—Ç–º–æ—Å—Ñ–µ—Ä–∞ –∏ –º–æ—Ä–µ –ø–æ–∑–∏—Ç–∏–≤–∞!',
            organizer: 'Rock Events LLC',
            availableTickets: 150,
            duration: '3 —á–∞—Å–∞'
          },
          2: {
            id: 2,
            title: 'Tech Conference 2024',
            date: '20 –∞–ø—Ä–µ–ª—è 2024, 10:00',
            location: '–°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥, –≠–∫—Å–ø–æ—Ñ–æ—Ä—É–º',
            address: '–ü–µ—Ç—Ä–æ–≥—Ä–∞–¥—Å–∫–∞—è –Ω–∞–±., 2',
            price: 5000,
            type: 'conference',
            image: 'https://via.placeholder.com/600x400/e74c3c/ffffff?text=Tech+Conference',
            description: '–ö—Ä—É–ø–Ω–µ–π—à–∞—è —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏—á–µ—Å–∫–∞—è –∫–æ–Ω—Ñ–µ—Ä–µ–Ω—Ü–∏—è –≥–æ–¥–∞. –î–æ–∫–ª–∞–¥—ã –æ—Ç –≤–µ–¥—É—â–∏—Ö —ç–∫—Å–ø–µ—Ä—Ç–æ–≤ IT-–∏–Ω–¥—É—Å—Ç—Ä–∏–∏.',
            organizer: 'Tech Innovations Inc.',
            availableTickets: 300,
            duration: '8 —á–∞—Å–æ–≤'
          },
          3: {
            id: 3,
            title: '–ú–µ–∂–¥—É–Ω–∞—Ä–æ–¥–Ω–∞—è –∫–Ω–∏–∂–Ω–∞—è —è—Ä–º–∞—Ä–∫–∞',
            date: '10 –º–∞—è 2024, 11:00',
            location: '–ö–∞–∑–∞–Ω—å, –ö—Ä–µ–º–ª—å',
            address: '–ö–∞–∑–∞–Ω—Å–∫–∏–π –ö—Ä–µ–º–ª—å',
            price: 500,
            type: 'fair',
            image: 'https://via.placeholder.com/600x400/2ecc71/ffffff?text=Book+Fair',
            description: '–ï–∂–µ–≥–æ–¥–Ω–∞—è –º–µ–∂–¥—É–Ω–∞—Ä–æ–¥–Ω–∞—è –∫–Ω–∏–∂–Ω–∞—è —è—Ä–º–∞—Ä–∫–∞ —Å —É—á–∞—Å—Ç–∏–µ–º –∏–∑–¥–∞—Ç–µ–ª—å—Å—Ç–≤ —Å–æ –≤—Å–µ–≥–æ –º–∏—Ä–∞.',
            organizer: '–ö–Ω–∏–∂–Ω–∞—è –ø–∞–ª–∞—Ç–∞',
            availableTickets: 1000,
            duration: '6 —á–∞—Å–æ–≤'
          }
        }

        setTimeout(() => {
          const eventData = mockEvents[id]
          if (eventData) {
            setEvent(eventData)
          }
          setLoading(false)
        }, 800)
      } catch (error) {
        console.error('Error fetching event details:', error)
        setLoading(false)
      }
    }

    fetchEventDetails()
  }, [id])

  const handleBuyTickets = () => {
    alert(`–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º! –í—ã –ø—Ä–∏–æ–±—Ä–µ–ª–∏ ${ticketCount} –±–∏–ª–µ—Ç(–∞) –Ω–∞ "${event.title}"`)
    // –ó–¥–µ—Å—å –±—É–¥–µ—Ç –ª–æ–≥–∏–∫–∞ –ø–æ–∫—É–ø–∫–∏ –±–∏–ª–µ—Ç–æ–≤
  }

  const handleBack = () => {
    navigate('/events')
  }

  if (loading) {
    return <Loading />
  }

  if (!event) {
    return (
      <div className="event-details">
        <div className="container">
          <div className="event-not-found">
            <h2>–ú–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ</h2>
            <button onClick={handleBack} className="back-button">
              –í–µ—Ä–Ω—É—Ç—å—Å—è –∫ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è–º
            </button>
          </div>
        </div>
      </div>
    )
  }

  const totalPrice = event.price * ticketCount

  return (
    <div className="event-details">
      <div className="container">
        <button onClick={handleBack} className="back-button">
          ‚Üê –ù–∞–∑–∞–¥ –∫ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è–º
        </button>
        
        <div className="event-details-content">
          <div className="event-image-section">
            <img src={event.image} alt={event.title} className="event-detail-image" />
          </div>
          
          <div className="event-info-section">
            <div className="event-header">
              <span className="event-type-badge">{event.type}</span>
              <h1 className="event-title">{event.title}</h1>
              <p className="event-organizer">–û—Ä–≥–∞–Ω–∏–∑–∞—Ç–æ—Ä: {event.organizer}</p>
            </div>

            <div className="event-meta">
              <div className="meta-item">
                <span className="meta-label">üìÖ –î–∞—Ç–∞ –∏ –≤—Ä–µ–º—è</span>
                <span className="meta-value">{event.date}</span>
              </div>
              <div className="meta-item">
                <span className="meta-label">üìç –ú–µ—Å—Ç–æ –ø—Ä–æ–≤–µ–¥–µ–Ω–∏—è</span>
                <span className="meta-value">{event.location}</span>
                <span className="meta-address">{event.address}</span>
              </div>
              <div className="meta-item">
                <span className="meta-label">‚è±Ô∏è –ü—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å</span>
                <span className="meta-value">{event.duration}</span>
              </div>
              <div className="meta-item">
                <span className="meta-label">üé´ –î–æ—Å—Ç—É–ø–Ω–æ –±–∏–ª–µ—Ç–æ–≤</span>
                <span className="meta-value">{event.availableTickets}</span>
              </div>
            </div>

            <div className="event-description">
              <h3>–û–ø–∏—Å–∞–Ω–∏–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è</h3>
              <p>{event.description}</p>
            </div>

            <div className="ticket-purchase">
              <div className="price-section">
                <span className="price-label">–¶–µ–Ω–∞ –∑–∞ –±–∏–ª–µ—Ç:</span>
                <span className="price-amount">{event.price} ‚ÇΩ</span>
              </div>
              
              <div className="ticket-counter">
                <label htmlFor="ticketCount">–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –±–∏–ª–µ—Ç–æ–≤:</label>
                <div className="counter-controls">
                  <button 
                    onClick={() => setTicketCount(prev => Math.max(1, prev - 1))}
                    disabled={ticketCount <= 1}
                    className="counter-btn"
                  >
                    -
                  </button>
                  <span className="ticket-count">{ticketCount}</span>
                  <button 
                    onClick={() => setTicketCount(prev => Math.min(event.availableTickets, prev + 1))}
                    disabled={ticketCount >= event.availableTickets}
                    className="counter-btn"
                  >
                    +
                  </button>
                </div>
              </div>

              <div className="total-section">
                <span className="total-label">–ò—Ç–æ–≥–æ:</span>
                <span className="total-amount">{totalPrice} ‚ÇΩ</span>
              </div>

              <button 
                onClick={handleBuyTickets}
                className="buy-button"
                disabled={event.availableTickets === 0}
              >
                {event.availableTickets > 0 ? '–ö—É–ø–∏—Ç—å –±–∏–ª–µ—Ç—ã' : '–ë–∏–ª–µ—Ç—ã —Ä–∞—Å–ø—Ä–æ–¥–∞–Ω—ã'}
              </button>
            </div>
          </div>
        </div>
      </div>
    </div>
  )
}

export default EventDetails